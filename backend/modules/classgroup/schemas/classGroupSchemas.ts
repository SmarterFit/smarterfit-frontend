import { z } from "zod";

// Schema para criação de grupo de aula
export const createClassGroupSchema = z.object({
  userCreatorId: z
    .string()
    .uuid({ message: "ID do criador inválido" }),

  title: z
    .string()
    .min(3, { message: "O título deve ter pelo menos 3 caracteres" })
    .max(100, { message: "O título deve ter no máximo 100 caracteres" }),

  capacity: z
    .number({ invalid_type_error: "Capacidade deve ser um número" })
    .int({ message: "Capacidade deve ser um número inteiro" })
    .min(1, { message: "Capacidade mínima é 1" }),

  description: z
    .string()
    .min(3, { message: "A descrição deve ter pelo menos 3 caracteres" })
    .max(255, { message: "A descrição deve ter no máximo 255 caracteres" }),

  modalityId: z
    .string()
    .uuid({ message: "ID da modalidade inválido" }),

  startDate: z
    .string()
    .regex(/^\d{4}-\d{2}-\d{2}$/, { message: "Data de início inválida" }),

  endDate: z
    .string()
    .regex(/^\d{4}-\d{2}-\d{2}$/, { message: "Data de término inválida" }),

  autoGeneratedSessions: z.boolean(),

  isEvent: z.boolean().optional()
});

export type CreateClassGroupForm = z.infer<typeof createClassGroupSchema>;

